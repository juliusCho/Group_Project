<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.chain.sjl.square.SquareDAO">

	<select id="listArticle" parameterType="com.chain.sjl.member.MemberVO" resultType="ArticleVO">
		select A.art_no, A.art_content, A.art_like, A.art_readcnt, A.art_com_cnt, A.art_pic, A.art_regdate,
			   B.mem_no, A.mem_nick
		from  (select a.art_no, a.art_content, a.mem_no, a.mem_nick, m.mem_country, a.art_like,
					  art_readcnt, art_com_cnt, a.art_pic,
			   	      case to_char(a.art_regdate, 'YYYY-MM-DD') when to_char(sysdate, 'YYYY-MM-DD')
			   	   	   	   								        then '오늘 ' || to_char(a.art_regdate, 'HH:MI:SS')
			   	   	   	   								        else to_char(a.art_regdate, 'YYYY-MM-DD')
			   		   	   	   								    end  as art_regdate
			   from   t_article a inner join t_member m
			   on     a.mem_no = m.mem_no) A
		inner  join
			  (select mem_no
			   from   t_member
			   where  mem_no != #{mem_no}
			   and    mem_no not in (select distinct f.fri_no
								     from   t_member m left outer join t_friend f
								     on     m.mem_no = f.mem_no
								     where  f.mem_no = #{mem_no})) B
		on     A.mem_no = B.mem_no
		where  A.mem_country != #{mem_country}
		order  by A.art_no desc
	</select>
		
	<select id="checkArtLike" parameterType="ArticleVO" resultType="int">
		select count(*)
		from   t_art_like_list
		where  mem_no=#{mem_no} and art_no=#{art_no}
	</select>
	
	<update id="likeArticle" parameterType="long">
		update t_article
		set    art_like = art_like + 1
		where  art_no = #{art_no}
	</update>
	
	<update id="hateArticle" parameterType="long">
		update t_article
		set    art_like = art_like - 1
		where  art_no = #{art_no}
	</update>
			
	<insert id="insertArtLike" parameterType="ArticleVO">
		insert into t_art_like_list(mem_no, art_no)
		values(#{mem_no}, #{art_no})
	</insert>
	
	<insert id="deleteArtLike" parameterType="ArticleVO">
		delete from t_art_like_list
		where  mem_no=#{mem_no} and art_no=#{art_no}
	</insert>
	
	<update id="upComcnt" parameterType="long">
		update t_article
		set    art_com_cnt = art_com_cnt + 1
		where  art_no = #{art_no}
	</update>
	
	<update id="downComcnt" parameterType="long">
		update t_article
		set    art_com_cnt = art_com_cnt - 1
		where  art_no = #{art_no}
	</update>
	
	<select id="listComment" parameterType="long" resultType="CommentVO">
		select A.mem_nick, A.com_content, A.com_like, A.com_regdate, A.mem_no, A.com_no
		from  (select m.mem_nick, c.com_content, c.com_like, c.art_no, m.mem_no, c.com_no,
				      case to_char(c.com_regdate, 'YYYY-MM-DD') when to_char(sysdate, 'YYYY-MM-DD')
				      then '오늘 ' || to_char(c.com_regdate, 'HH:MI:SS') else to_char(c.com_regdate, 'YYYY-MM-DD')
				      end as com_regdate
			   from   t_member m inner join t_comment c
			   on m.mem_no = c.mem_no) A
		inner  join t_article B
		on     B.art_no = A.art_no
		where  B.art_no = #{art_no} 
		order  by A.com_no desc
	</select>
			
	<select id="checkComLike" parameterType="CommentVO" resultType="int">
		select count(*)
		from   t_com_like_list
		where  mem_no=#{mem_no} and art_no=#{art_no} and com_no=#{com_no}
	</select>
	
	<insert id="insertComment" parameterType="CommentVO">
		insert into t_comment(com_no, com_content, art_no, mem_no)
		values(seq_comment.nextval, #{com_content}, #{art_no}, #{mem_no})
	</insert>
	
	<update id="updateComment" parameterType="CommentVO">
		update t_comment
		set    com_content=#{com_content}
		where  art_no=#{art_no} and com_no=#{com_no}
	</update>
	
	<delete id="deleteComment" parameterType="CommentVO">
		delete from t_comment
		where  art_no=#{art_no} and com_no=#{com_no}
	</delete>
	
	<update id="likeComment" parameterType="CommentVO">
		update t_comment
		set    com_like = com_like + 1
		where  art_no=#{art_no} and com_no=#{com_no}
	</update>
	
	<update id="hateComment" parameterType="CommentVO">
		update t_comment
		set    com_like = com_like - 1
		where  art_no=#{art_no} and com_no=#{com_no}
	</update>
				
	<insert id="insertComLike" parameterType="CommentVO">
		insert into t_com_like_list(mem_no, art_no, com_no)
		values(#{mem_no}, #{art_no}, #{com_no})
	</insert>
	
	<insert id="deleteComLike" parameterType="CommentVO">
		delete from t_com_like_list
		where  mem_no=#{mem_no} and art_no=#{art_no} and com_no=#{com_no}
	</insert>
	
</mapper>